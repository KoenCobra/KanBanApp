@using Task = KanBanApp.Models.Task
@inherits FluxorComponent
@inject StateFacade Facade
@inject IState<KanbanState> State

<EditForm Model="Board">
    <DataAnnotationsValidator />
    <h2>Add New Board</h2>
    <div class="input">
        <label>Board Name</label>
        <InputText @bind-Value="Board.name" />
    </div>

    <div class="input">
        <label>Board Columns</label>
        @if (Board.columns != null)
        {
            foreach (var column in Board.columns)
            {
                <div class="board-colums-input">
                    <InputText type="text" @bind-Value="column.name" />
                    <img @onclick="() => Board.columns.Remove(column)" src="assets/icon-cross.svg" alt="" />
                </div>
            }
            <button @onclick="() => Board.columns.Add(new Column())">Add New Column</button>
        }
    </div>
    <button @onclick="CreateBoard">create</button>
</EditForm>

@code {
    private Board? Board { get; set; }

    [Parameter]
    public EventCallback OnCreate { get; set; }

    protected override void OnInitialized()
    {
        Board = new Board
            {
                name = "",
                columns = new List<Column>
            {
                new()
                {
                    name = "TODO",
                    tasks = new List<Task>()
                },
                new()
                {
                    name = "DOING",
                    tasks = new List<Task>()
                }
            }
            };

        base.OnInitialized();
    }

    private void CreateBoard()
    {
        State.Value.Boards.Add(Board);
        OnCreate.InvokeAsync();
    }
}

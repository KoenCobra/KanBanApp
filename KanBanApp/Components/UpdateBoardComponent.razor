@using Task = KanBanApp.Models.Task
@inherits FluxorComponent
@inject StateFacade Facade
@inject IState<KanbanState> State

<EditForm Model="State.Value.Board">
    <DataAnnotationsValidator />
    <h2>Edit Board</h2>
    <div class="input">
        <label>Board Name</label>
        <InputText @bind-Value="State.Value.Board.name" />
    </div>

    <div class="input">
        <label>Board Columns</label>
        @if (State.Value.Board != null && State.Value.Board.columns != null)
        {
            foreach (var column in State.Value.Board.columns)
            {
                <div class="board-colums-input">
                    <InputText type="text" @bind-Value="column.name" />
                    <img @onclick="() => State.Value.Board.columns.Remove(column)" src="assets/icon-cross.svg" alt="" />
                </div>
            }
            <button @onclick="AddNewColumn">Add New Column</button>
        }
    </div>
</EditForm>
<button type="submit" @onclick="UpdateBoard">Save Changes</button>

@code {
    [Parameter]
    public EventCallback OnEdit { get; set; }

    private void AddNewColumn()
    {
        State.Value.Board.columns!.Add(new Column
            {
                name = "",
                tasks = new List<Task>()
            });
    }

    private void UpdateBoard()
    {
        OnEdit.InvokeAsync();
    }
}

@inherits FluxorComponent
@inject StateFacade Facade
@inject IState<KanbanState> State

<EditForm Model="Board">
    <DataAnnotationsValidator />
    <h2>Edit Board</h2>
    <div class="input">
        <label>Board Name</label>
        <InputText @bind-Value="Board.name" />
    </div>

    <div class="input">
        <label>Board Columns</label>
        @if (Board != null && Board.columns != null)
        {
            foreach (var column in Board.columns)
            {
                <input type="text" @bind-value="column.name" />
            }
        }
    </div>
    <button type="submit" @onclick="UpdateBoard">Save Changes</button>
</EditForm>
<button @onclick="AddNewColumn">Add New Column</button>

@code {
    [Parameter]
    public EventCallback OnEdit { get; set; }

    [Parameter]
    public Board? Board { get; set; }

    protected override void OnInitialized()
    {
        Board = State.Value.Boards.Find(b => b.name == Board.name);

        base.OnInitialized();
    }


    private void AddNewColumn()
    {
        Board.columns.Add(new Column
            {
                name = ""
            });
    }

    private void UpdateBoard()
    {
        Facade.UpdateBoard(Board.name, Board);
        OnEdit.InvokeAsync();
    }
}

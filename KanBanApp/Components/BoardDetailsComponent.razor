@using Task = KanBanApp.Models.Task
@inherits FluxorComponent
@inject IState<KanbanState> State
@inject StateFacade Facade

@if (State.Value.Board is not null)
{
    <div class="board-details">
        <div class="columns">
            @foreach (var column in State.Value.Board.columns!)
            {
                <div class="column">
                    <p class="column-name">
                        @column.name (@column.tasks.Count)
                    </p>

                    <div class="tasks">
                        @foreach (var task in column.tasks)
                        {
                            <div @onclick="() => ShowTaskDetails(task)" class="task">
                                <p class="task-title">@task.title</p>
                                <p class="number-of-subtasks">
                                    @task.subtasks.Count(s => s.isCompleted)
                                    of
                                    @task.subtasks.Count
                                    subtasks
                                </p>
                            </div>
                        }

                    </div>
                </div>
            }
            <button class="new-column-btn btn" @onclick="() => _isAddColumnShowing = true">+ New Column</button>
        </div>
    </div>
}

@if (_isTaskDetailsShowing)
{
    <TaskDetailsComponent OnTaskDelete="() => _isTaskDetailsShowing = false"
                      OnStatusSelect="() => _isTaskDetailsShowing = false" />
}

@if (_isAddColumnShowing)
{
    <AddNewColumnComponent OnAddColumn="() => _isAddColumnShowing = false" />
}


@code {
    private bool _isTaskDetailsShowing;
    private bool _isAddColumnShowing;
    private bool _isCrudShowing;

    private void ShowTaskDetails(Task task)
    {
        _isTaskDetailsShowing = true;
        Facade.LoadTask(task);
    }

    private void AddNewColumn()
    {
        State.Value.Board.columns!.Add(new Column
            {
                name = "",
                tasks = new List<Task>()
            });
    }
}

@page "/board/{name}"
@using KanBanApp.Services.Abstractions
@using KanBanApp.Store
@inherits FluxorComponent
@inject IKanbanService KanbanService
@inject IState<KanbanState> KanBanState

@if (KanBanState.Value.Boards is not null)
{
    @if (KanBanState.Value.Boards.boards is not null)
    {
        @foreach (var board in KanBanState.Value.Boards.boards.Where(b => b.name == Name))
        {
            <p>@board.name</p>
            @if (board.columns != null)
            {
                foreach (var column in board.columns)
                {
                    @column.name

                    @if (column.tasks != null)
                    {
                        foreach (var task in column.tasks)
                        {
                            <p>@task.description</p>
                            <p>@task.title</p>
                            <p>@task.status</p>

                            @if (task.subtasks != null)
                            {
                                foreach (var subTask in task.subtasks)
                                {
                                    <p>@subTask.title</p>
                                    <p>@subTask.isCompleted</p>
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

<button @onclick="() => KanbanService.Delete(Name, KanBanState.Value)">delete</button>
@code {
    [Parameter]
    public string Name { get; set; } = "";
}
